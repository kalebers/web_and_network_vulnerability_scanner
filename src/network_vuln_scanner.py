import nmap
import json
from scapy.all import ARP, Ether, srp
import socket

def discover_hosts(network_range):
    """ Discover live hosts on the network using ARP scan """
    print("[*] Discovering hosts on the network...")
    arp = ARP(pdst=network_range)
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")
    packet = ether/arp
    result = srp(packet, timeout=3, verbose=0)[0]

    hosts = []
    for sent, received in result:
        hosts.append({'ip': received.psrc, 'mac': received.hwsrc})
    
    print(f"[*] Discovered {len(hosts)} host(s)")
    return hosts

def scan_ports(host):
    """ Scan open ports on a given host using Nmap """
    print(f"[*] Scanning ports on {host}...")
    nm = nmap.PortScanner()
    nm.scan(host, '1-65535')
    open_ports = [(port, nm[host]['tcp'][port]['state']) for port in nm[host]['tcp'] if nm[host]['tcp'][port]['state'] == 'open']
    return open_ports

def detect_services(host):
    """ Detect services running on open ports using Nmap """
    print(f"[*] Detecting services on {host}...")
    nm = nmap.PortScanner()
    nm.scan(host, arguments='-sV')
    services = [(port, nm[host]['tcp'][port]['name'], nm[host]['tcp'][port]['version']) for port in nm[host]['tcp']]
    return services

def scan_for_vulns(host):
    """ Scan for vulnerabilities on a given host using Nmap's built-in vulnerability scripts """
    print(f"[*] Scanning for vulnerabilities on {host}...")
    nm = nmap.PortScanner()
    nm.scan(host, arguments='--script vuln')
    return nm[host]

def generate_report(host_info):
    """ Generate a JSON report of the scan results """
    print("[*] Generating report...")
    with open(f'network_scan_report.json', 'w') as f:
        json.dump(host_info, f, indent=4)
    print("[*] Report saved as network_scan_report.json")

def main():
    # Network range (change this to your network's range)
    network_range = "192.168.1.0/24"

    # Step 1: Discover Hosts
    hosts = discover_hosts(network_range)

    # Step 2: For each discovered host, scan for open ports, detect services, and check vulnerabilities
    host_info = []
    for host in hosts:
        host_ip = host['ip']
        print(f"\n[*] Processing host {host_ip} ({host['mac']})")

        # Step 2.1: Scan Open Ports
        try:
            open_ports = scan_ports(host_ip)
        except Exception as e:
            print(f"[-] Error scanning ports on {host_ip}: {e}")
            open_ports = []

        # Step 2.2: Detect Services on Open Ports
        try:
            services = detect_services(host_ip)
        except Exception as e:
            print(f"[-] Error detecting services on {host_ip}: {e}")
            services = []

        # Step 2.3: Scan for Vulnerabilities
        try:
            vulns = scan_for_vulns(host_ip)
        except Exception as e:
            print(f"[-] Error scanning vulnerabilities on {host_ip}: {e}")
            vulns = {}

        # Collect info for the host
        host_info.append({
            'host_ip': host_ip,
            'mac': host['mac'],
            'open_ports': open_ports,
            'services': services,
            'vulnerabilities': vulns
        })

    # Step 3: Generate report
    generate_report(host_info)

if __name__ == "__main__":
    main()
